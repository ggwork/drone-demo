version: "3.7"
# 创建自定义网络
networks:
  drone:
    # external: false
    driver: bridge
services:
  # Drone Server 服务
  server:
    image: drone/drone:latest
    container_name: drone_server
    restart: always
    networks:
      - drone # 加入到drone网络
    ports:
      - "7929:80"
      - "4443:443"
    environment:
      - DRONE_AGENTS_ENABLED=true 
      - DRONE_SERVER_PROTO=http # 访问协议，创建webHooks和重定向
      - DRONE_SERVER_HOST=101.43.217.242:7929 # 主机名称，创建webHooks和重定向
      - DRONE_RPC_SECRET=8352ce64ff37e2f05b848112c7a6845c # 与 drone runner 通讯的密钥
      - DRONE_USER_CREATE=username:ggwork,admin:true # 管理员账户
      - DRONE_GIT_ALWAYS_AUTH=true # 使用 oauth 身份验证信息拉取代码
      - DRONE_GITHUB_SERVER=https://github.com # GITEE 客户端 id
      - DRONE_GITHUB_CLIENT_ID=d04445c8dd30c241ec1c # GITEE 客户端 id
      - DRONE_GITHUB_CLIENT_SECRET=8c22df6210d03c0dbbb459681048194dc1e71201 # GITEE 客户端 密钥
      - DRONE_OPEN=true 
      - DRONE_DATABASE_DATASOURCE=/var/lib/drone/drone.sqlite 
      - DRONE_DATABASE_DRIVER=sqlite3 
      - DRONE_DEBUG=true  
      - DRONE_LOGS_DEBUG=true 
      - DRONE_LOGS_TRACE=true   
      - DRONE_USER_CREATE=username:TheWinds，admin:true  
      - TZ=Asia/Shanghai 
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/data/drone:/var/lib/drone
  # Drone Docker Runner
  runner:
    image: drone/agent:latest # 目前drone-runner-docker最新版本为 1.8.0
    container_name: drone_runner
    restart: always
    depends_on:
      - server
    networks:
      - drone # 加入到drone网络
    ports:
      - "7930:3000"
    environment:
      - DRONE_RUNNER_NAME=localhost
      - DRONE_RUNNER_CAPACITY=2 # 限制runner可执行的并发管道数量
      - DRONE_RPC_PROTO=http # 访问drone server 协议
      - DRONE_RPC_HOST=101.43.217.242:7929 # 访问drone server 服务器地址
      - DRONE_RPC_SECRET=8352ce64ff37e2f05b848112c7a6845c # 与 drone server 通讯的密钥
      - DRONE_UI_USERNAME=ggwork # Drone Runner 的 UI 用户账号
      - DRONE_UI_PASSWORD=zztt13288214456 # Drone Runner 的 UI 用户密码
      # - DRONE_RUNNER_NETWORKS=drone_net
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
